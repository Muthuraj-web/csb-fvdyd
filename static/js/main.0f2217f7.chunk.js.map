{"version":3,"sources":["algorithm/dsu.js","algorithm/floydwarshal2D.js","LoadingContainer.jsx","ScoreContainer.jsx","LoadingScoreManager.jsx","PacmanGrid.jsx","App.js","index.js"],"names":["DisjointSetUnion","height","width","this","root","rank","i","colArr","rankArr","j","push","find","node1","node2","x","y","root1","root2","ri","rj","rx","ry","floydWarshall","grid","numtoGrid","Map","gridtonum","dp","nextMoveNode","populate","markNeighbs","applyAlgorithm","length","num","Object","keys","dpRow","Infinity","Array","directions","row","each","isValid","col","k","villain","player","resultIndex","LoadingContainer","ScoreContainer","points","setLoading","loading","setTimerToggle","timerToggle","useState","buttonState","setButtonState","disabled","className","onClick","LoadingScoreManager","isGameEnd","PacmanGrid","gridRef","updatePlayerDirection","cellSize","direction","defaultStyle","keyIndex","checkValidCell","blockBorders","bordersStyle","join","ref","onKeyDown","e","tabIndex","map","row_idx","col_idx","style","alt","src","process","App","villainCount","Math","floor","window","innerWidth","innerHeight","setGrid","foodsArr","setFoodsArr","setPlayer","setDirection","villains","setVillains","distObject","setDistObject","setGameEnd","maxPoints","setMaxPoints","setPoints","useRef","useEffect","reset","move","createGrid","newGrid","newFoodsArr","newPlayer","newVillains","newMaxPoints","newDistObject","setTimeout","createRandomNumber","min","max","ceil","random","dsu","isConnected","newPositions","arr","union","slice","_","cloneDeep","newPoints","checkValidMove","giveNextMove","current","focus","which","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.0f2217f7.chunk.js","sourcesContent":["class DisjointSetUnion {\r\n\tconstructor(height, width) {\r\n\t\tthis.height = height;\r\n\t\tthis.width = width;\r\n\r\n\t\tthis.root = [];\r\n\t\tthis.rank = [];\r\n\r\n\t\tfor (let i = 0; i < height; i++) {\r\n\t\t\tconst colArr = [];\r\n\t\t\tconst rankArr = [];\r\n\r\n\t\t\tfor (let j = 0; j < width; j++) {\r\n\t\t\t\tcolArr.push([i, j]);\r\n\t\t\t\trankArr.push(0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.root.push(colArr);\r\n\t\t\tthis.rank.push(rankArr);\r\n\t\t}\r\n\t}\r\n\r\n\tfind(i, j) {\r\n\t\tif (this.root[i][j][0] === i && this.root[i][j][1] === j)\r\n\t\t\treturn [...this.root[i][j]];\r\n\t\tthis.root[i][j] = this.find(this.root[i][j][0], this.root[i][j][1]);\r\n\t\treturn this.root[i][j];\r\n\t}\r\n\r\n\tunion(node1, node2) {\r\n\t\tconst [i, j] = node1;\r\n\t\tconst [x, y] = node2;\r\n\r\n\t\tconst root1 = this.find(i, j);\r\n\t\tconst root2 = this.find(x, y);\r\n\r\n\t\tconst [ri, rj] = root1;\r\n\t\tconst [rx, ry] = root2;\r\n\r\n\t\tif (ri === rx && rj === ry) return;\r\n\t\tif (this.rank[ri][rj] < this.rank[rx][ry]) {\r\n\t\t\tthis.root[ri][rj] = [...root2];\r\n\t\t} else if (this.rank[ri][rj] > this.rank[rx][ry]) {\r\n\t\t\tthis.root[rx][ry] = [...root1];\r\n\t\t} else {\r\n\t\t\tthis.root[ri][rj] = [...root2];\r\n\t\t\tthis.rank[rx][ry] += 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default DisjointSetUnion;\r\n","export default class floydWarshall {\r\n\tconstructor(grid) {\r\n\t\tthis.numtoGrid = new Map();\r\n\t\tthis.gridtonum = new Map();\r\n\t\tthis.dp = [];\r\n\t\tthis.nextMoveNode = [];\r\n\r\n\t\tthis.populate(grid);\r\n\t\tthis.markNeighbs(grid);\r\n\t\tthis.applyAlgorithm();\r\n\t}\r\n\r\n\tisValid(i, j, grid) {\r\n\t\treturn i >= 0 && i < grid.length && j >= 0 && j < grid[0].length;\r\n\t}\r\n\r\n\tpopulate(grid) {\r\n\t\tfor (let i = 0; i < grid.length; i++) {\r\n\t\t\tfor (let j = 0; j < grid[0].length; j++) {\r\n\t\t\t\tif (grid[i][j] === 1) continue;\r\n\t\t\t\tconst num = Object.keys(this.numtoGrid).length;\r\n\t\t\t\tthis.numtoGrid[num] = [i, j];\r\n\t\t\t\tthis.gridtonum[[i, j]] = num;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < Object.keys(this.numtoGrid).length; i++) {\r\n\t\t\tconst dpRow = [];\r\n\t\t\tfor (let j = 0; j < Object.keys(this.numtoGrid).length; j++) {\r\n\t\t\t\tdpRow.push(i === j ? 0 : Infinity);\r\n\t\t\t}\r\n\t\t\tthis.dp.push(dpRow);\r\n\t\t\tthis.nextMoveNode.push(new Array(dpRow.length));\r\n\t\t}\r\n\t}\r\n\r\n\tmarkNeighbs(grid) {\r\n\t\tconst directions = [\r\n\t\t\t[1, 0],\r\n\t\t\t[0, 1],\r\n\t\t\t[-1, 0],\r\n\t\t\t[0, -1]\r\n\t\t];\r\n\r\n\t\tfor (let i = 0; i < grid.length; i++) {\r\n\t\t\tfor (let j = 0; j < grid[0].length; j++) {\r\n\t\t\t\tif (grid[i][j] === 1) continue;\r\n\t\t\t\tconst row = this.gridtonum[[i, j]];\r\n\t\t\t\tfor (let each = 0; each < directions.length; each++) {\r\n\t\t\t\t\tconst [x, y] = directions[each];\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.isValid(i + x, j + y, grid) &&\r\n\t\t\t\t\t\tgrid[i + x][j + y] !== 1\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tconst col = this.gridtonum[[i + x, j + y]];\r\n\t\t\t\t\t\tthis.dp[row][col] = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tapplyAlgorithm() {\r\n\t\tfor (let k = 0; k < this.dp.length; k++) {\r\n\t\t\tfor (let i = 0; i < this.dp.length; i++) {\r\n\t\t\t\tfor (let j = 0; j < this.dp.length; j++) {\r\n\t\t\t\t\tif (i === j) continue;\r\n\t\t\t\t\tif (this.dp[i][j] === 1) {\r\n\t\t\t\t\t\tthis.nextMoveNode[i][j] = j;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.dp[i][j] > this.dp[i][k] + this.dp[k][j]) {\r\n\t\t\t\t\t\tthis.dp[i][j] = this.dp[i][k] + this.dp[k][j];\r\n\t\t\t\t\t\tthis.nextMoveNode[i][j] = this.nextMoveNode[i][k];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tgiveNextMove(villain, player) {\r\n\t\tconst i = this.gridtonum[villain];\r\n\t\tconst j = this.gridtonum[player];\r\n\r\n\t\tconst resultIndex = this.nextMoveNode[i][j];\r\n\t\treturn this.numtoGrid[resultIndex];\r\n\t}\r\n}\r\n","export default function LoadingContainer() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>LOADING......</h2>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { useState } from 'react';\r\nimport './styles.css';\r\n\r\nexport default function ScoreContainer({\r\n\tpoints,\r\n\tloading,\r\n\tsetLoading,\r\n\tsetTimerToggle,\r\n\ttimerToggle\r\n}) {\r\n\tconst [buttonState, setButtonState] = useState(false);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>YOUR SCORE........</h2>\r\n\t\t\t<h5>{points}</h5>\r\n\t\t\t<button\r\n\t\t\t\tdisabled={buttonState}\r\n\t\t\t\tclassName=\"scorecontainer-button\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tsetButtonState(true);\r\n\t\t\t\t\tsetLoading(true);\r\n\t\t\t\t\tsetTimerToggle(!timerToggle);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<p>RESET GAME</p>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import LoadingContainer from './LoadingContainer';\r\nimport ScoreContainer from './ScoreContainer';\r\n\r\nexport default function LoadingScoreManager({\r\n\tsetLoading,\r\n\tisGameEnd,\r\n\tpoints,\r\n\tloading,\r\n\tsetTimerToggle,\r\n\ttimerToggle\r\n}) {\r\n\tif (loading) return <LoadingContainer />;\r\n\treturn (\r\n\t\t<ScoreContainer\r\n\t\t\tpoints={points}\r\n\t\t\tsetLoading={setLoading}\r\n\t\t\tsetTimerToggle={setTimerToggle}\r\n\t\t\ttimerToggle={timerToggle}\r\n\t\t/>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport './styles.css';\r\n\r\nexport default function PacmanGrid({\r\n\tgrid,\r\n\tgridRef,\r\n\tupdatePlayerDirection,\r\n\tcellSize,\r\n\twidth,\r\n\theight,\r\n\tdirection\r\n}) {\r\n\tconst giveRotationClass = () => {\r\n\t\tif (\r\n\t\t\t(direction[0] === 0 && direction[1] === 0) ||\r\n\t\t\t(direction[0] === 0 && direction[1] === 1)\r\n\t\t)\r\n\t\t\treturn ' ';\r\n\t\tif (direction[0] === 0 && direction[1] === -1)\r\n\t\t\treturn 'pacman-player-left';\r\n\t\tif (direction[0] === -1 && direction[1] === 0)\r\n\t\t\treturn 'pacman-player-top';\r\n\t\treturn 'pacman-player-bottom';\r\n\t};\r\n\tconst defaultStyle = { width: cellSize, height: cellSize };\r\n\tlet keyIndex = grid.length;\r\n\r\n\tconst checkValidCell = (i, j) => {\r\n\t\treturn i >= 0 && i < grid.length && j >= 0 && j < grid[0].length;\r\n\t};\r\n\r\n\tconst blockBorders = (i, j) => {\r\n\t\tconst bordersStyle = [];\r\n\t\tconst left = 'pacman-block-left';\r\n\t\tconst right = 'pacman-block-right';\r\n\t\tconst top = 'pacman-block-top';\r\n\t\tconst bottom = 'pacman-block-bottom';\r\n\r\n\t\tif (checkValidCell(i - 1, j) && grid[i - 1][j] !== 1)\r\n\t\t\tbordersStyle.push(top);\r\n\t\tif (checkValidCell(i + 1, j) && grid[i + 1][j] !== 1)\r\n\t\t\tbordersStyle.push(bottom);\r\n\t\tif (checkValidCell(i, j - 1) && grid[i][j - 1] !== 1)\r\n\t\t\tbordersStyle.push(left);\r\n\t\tif (checkValidCell(i, j + 1) && grid[i][j + 1] !== 1)\r\n\t\t\tbordersStyle.push(right);\r\n\r\n\t\treturn bordersStyle.join(' ');\r\n\t};\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"pacman-container\"\r\n\t\t\tref={gridRef}\r\n\t\t\tonKeyDown={(e) => {\r\n\t\t\t\tupdatePlayerDirection(e);\r\n\t\t\t}}\r\n\t\t\ttabIndex={-1}\r\n\t\t>\r\n\t\t\t{grid.map((row, row_idx) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={row_idx} className=\"pacman-row\">\r\n\t\t\t\t\t\t{row.map((col, col_idx) => {\r\n\t\t\t\t\t\t\tif (grid[row_idx][col_idx] === 1) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tkey={keyIndex++}\r\n\t\t\t\t\t\t\t\t\t\tclassName={`pacman-block ${blockBorders(\r\n\t\t\t\t\t\t\t\t\t\t\trow_idx,\r\n\t\t\t\t\t\t\t\t\t\t\tcol_idx\r\n\t\t\t\t\t\t\t\t\t\t)}`}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ ...defaultStyle }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (grid[row_idx][col_idx] === 0) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tkey={keyIndex++}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ ...defaultStyle }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"pacman-food\">*</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (grid[row_idx][col_idx] === 2) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tkey={keyIndex++}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ ...defaultStyle }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\talt=\"pacman-ghost\"\r\n\t\t\t\t\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\t\t\t\t\tprocess.env.PUBLIC_URL +\r\n\t\t\t\t\t\t\t\t\t\t\t\t'/pacman-ghost.webp'\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ ...defaultStyle }}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (grid[row_idx][col_idx] === 3) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tkey={keyIndex++}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ ...defaultStyle }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\talt=\"pacman-player\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={`pacman-player ${giveRotationClass()}`}\r\n\t\t\t\t\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\t\t\t\t\tprocess.env.PUBLIC_URL +\r\n\t\t\t\t\t\t\t\t\t\t\t\t'/pacman-player.webp'\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ ...defaultStyle }}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName=\"pacman-empty\"\r\n\t\t\t\t\t\t\t\t\tkey={keyIndex++}\r\n\t\t\t\t\t\t\t\t\tstyle={defaultStyle}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\n","// should be set by  createGrid()\n// 0 -> food\n// 1 -> block\n// 2 -> villian\n// 3 -> player\n\n// should be set during gameplay\n// 4 -> empty block after consuming food\nimport React, { useEffect, useRef, useState } from 'react';\nimport DisjointSetUnion from './algorithm/dsu';\nimport floydWarshall from './algorithm/floydwarshal2D';\nimport LoadingScoreManager from './LoadingScoreManager';\nimport PacmanGrid from './PacmanGrid';\nimport './styles.css';\nimport _ from 'lodash';\n\nexport default function App({ cellSize, villainCount }) {\n\tconst width = Math.floor((window.innerWidth - 30) / cellSize);\n\tconst height = Math.floor((window.innerHeight - 30) / cellSize);\n\tconst [grid, setGrid] = useState([]);\n\tconst [foodsArr, setFoodsArr] = useState([]);\n\tconst [player, setPlayer] = useState([]);\n\tconst [direction, setDirection] = useState([0, 0]);\n\tconst [villains, setVillains] = useState([]);\n\tconst [distObject, setDistObject] = useState({});\n\tconst [loading, setLoading] = useState(true);\n\tconst [isGameEnd, setGameEnd] = useState(false);\n\tconst [maxPoints, setMaxPoints] = useState(0);\n\tconst [points, setPoints] = useState(0);\n\tconst [timerToggle, setTimerToggle] = useState(false);\n\n\tconst gridRef = useRef(null);\n\n\tuseEffect(() => {\n\t\tif (loading || isGameEnd) return reset();\n\t\treturn move();\n\t}, [timerToggle]);\n\n\tconst reset = () => {\n\t\tconst {\n\t\t\tnewGrid,\n\t\t\tnewFoodsArr,\n\t\t\tnewPlayer,\n\t\t\tnewVillains,\n\t\t\tnewMaxPoints\n\t\t} = createGrid(height, width);\n\t\tconst newDistObject = new floydWarshall(newGrid);\n\t\tsetGrid(newGrid);\n\t\tsetFoodsArr(newFoodsArr);\n\t\tsetPlayer(newPlayer);\n\t\tsetDirection([0, 0]);\n\t\tsetVillains(newVillains);\n\t\tsetDistObject(newDistObject);\n\t\tsetLoading(false);\n\t\tsetGameEnd(false);\n\t\tsetMaxPoints(newMaxPoints);\n\t\tsetPoints(0);\n\t\tsetTimeout(() => {\n\t\t\tsetTimerToggle(!timerToggle);\n\t\t}, 500);\n\t};\n\n\t// gives min->max-1\n\tconst createRandomNumber = (min, max) => {\n\t\treturn Math.max(0, Math.ceil(Math.random() * (max - min) + min) - 1);\n\t};\n\n\tconst createGrid = (height, width) => {\n\t\tconst dsu = new DisjointSetUnion(height, width);\n\n\t\tconst isConnected = (i, j, x, y) => {\n\t\t\tconst [ri, rj] = dsu.find(i, j);\n\t\t\tconst [rx, ry] = dsu.find(x, y);\n\t\t\treturn ri === rx && rj === ry;\n\t\t};\n\n\t\t// initializing foodsArr and gridsArr\n\t\tconst newFoodsArr = [];\n\t\tconst newGrid = [];\n\t\tfor (let i = 0; i < height; i++) {\n\t\t\tnewGrid.push(new Array(width));\n\t\t\tnewFoodsArr.push(new Array(width));\n\t\t}\n\n\t\t// setting villains and player\n\t\tconst newPositions = [];\n\t\tfor (let i = 0; i < villainCount + 1; i++) {\n\t\t\tlet row = createRandomNumber(0, height);\n\t\t\tlet col = createRandomNumber(0, width);\n\t\t\twhile (newGrid[row][col] === 2) {\n\t\t\t\trow = createRandomNumber(0, height);\n\t\t\t\tcol = createRandomNumber(0, width);\n\t\t\t}\n\t\t\tnewGrid[row][col] = 2;\n\t\t\tif (i === villainCount) newGrid[row][col] = 3;\n\t\t\tnewPositions.push([row, col]);\n\t\t}\n\n\t\t// setting food,blocks\n\t\tlet newMaxPoints = 0;\n\t\tfor (let i = 0; i < height; i++) {\n\t\t\tfor (let j = 0; j < width; j++) {\n\t\t\t\tif (newGrid[i][j] === 2 || newGrid[i][j] === 3) continue;\n\t\t\t\telse if (\n\t\t\t\t\ti === 0 ||\n\t\t\t\t\ti === height - 1 ||\n\t\t\t\t\tj === 0 ||\n\t\t\t\t\tj === width - 1\n\t\t\t\t)\n\t\t\t\t\tnewGrid[i][j] = 0;\n\t\t\t\telse if (\n\t\t\t\t\t(newGrid[i - 1][j - 1] &&\n\t\t\t\t\t\tnewGrid[i - 1][j + 1] &&\n\t\t\t\t\t\tisConnected(i - 1, j - 1, i - 1, j + 1)) ||\n\t\t\t\t\t(newGrid[i][j - 1] &&\n\t\t\t\t\t\tnewGrid[i - 1][j + 1] &&\n\t\t\t\t\t\tisConnected(i, j - 1, i - 1, j + 1))\n\t\t\t\t)\n\t\t\t\t\tnewGrid[i][j] = 0;\n\t\t\t\telse newGrid[i][j] = createRandomNumber(0, 2);\n\n\t\t\t\tnewFoodsArr[i][j] = true;\n\n\t\t\t\tif (newGrid[i][j]) {\n\t\t\t\t\tconst arr = [\n\t\t\t\t\t\t[i, j - 1],\n\t\t\t\t\t\t[i - 1, j - 1],\n\t\t\t\t\t\t[i - 1, j],\n\t\t\t\t\t\t[i - 1, j + 1]\n\t\t\t\t\t];\n\t\t\t\t\tfor (let each in arr) {\n\t\t\t\t\t\tconst [x, y] = arr[each];\n\t\t\t\t\t\tif (newGrid[x][y]) {\n\t\t\t\t\t\t\tdsu.union(arr[each], [i, j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnewFoodsArr[i][j] = false;\n\t\t\t\t}\n\n\t\t\t\tnewMaxPoints += newGrid[i][j] ? 0 : 1;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tnewGrid,\n\t\t\tnewFoodsArr,\n\t\t\tnewPlayer: newPositions[newPositions.length - 1],\n\t\t\tnewVillains: newPositions.slice(0, -1),\n\t\t\tnewMaxPoints\n\t\t};\n\t};\n\n\tconst move = () => {\n\t\t// deep copy Elementsssss....\n\t\tconst newGrid = _.cloneDeep(grid);\n\t\tconst newFoodsArr = _.cloneDeep(foodsArr);\n\t\tconst newPlayer = player;\n\t\tconst newVillains = [];\n\t\tlet newPoints = points;\n\n\t\t// check if player caught by ghost\n\t\tfor (let each = 0; each < villains.length; each++) {\n\t\t\tif (\n\t\t\t\t(player[0] === villains[each][0] &&\n\t\t\t\t\tplayer[1] === villains[each][1]) ||\n\t\t\t\tmaxPoints === points\n\t\t\t)\n\t\t\t\treturn setGameEnd(true);\n\t\t}\n\n\t\tconst checkValidMove = (i, j) =>\n\t\t\ti >= 0 &&\n\t\t\ti < grid.length &&\n\t\t\tj >= 0 &&\n\t\t\tj < grid[0].length &&\n\t\t\tgrid[i][j] !== 1 &&\n\t\t\tgrid[i][j] !== 2;\n\n\t\tlet x = player[0] + direction[0];\n\t\tlet y = player[1] + direction[1];\n\n\t\tif (checkValidMove(x, y)) {\n\t\t\tif (grid[x][y] === 0) newPoints += 1;\n\t\t\tnewGrid[player[0]][player[1]] = 4;\n\t\t\tnewGrid[x][y] = 3;\n\n\t\t\tnewFoodsArr[x][y] = false;\n\n\t\t\tnewPlayer[0] = x;\n\t\t\tnewPlayer[1] = y;\n\t\t}\n\n\t\tfor (let each = 0; each < villains.length; each++) {\n\t\t\tconst [i, j] = villains[each];\n\t\t\tconst [x, y] = distObject.giveNextMove(villains[each], player);\n\n\t\t\tif (newVillains.length === 0 || grid[x][y] !== 2) {\n\t\t\t\tnewVillains.push([x, y]);\n\t\t\t\tnewGrid[x][y] = 2;\n\t\t\t\tnewGrid[i][j] = newFoodsArr[i][j] ? 0 : 4;\n\t\t\t} else {\n\t\t\t\tnewVillains.push([i, j]);\n\t\t\t\tnewGrid[i][j] = 2;\n\t\t\t}\n\t\t}\n\n\t\tgridRef.current.focus();\n\t\tsetGrid(newGrid);\n\t\tsetFoodsArr(newFoodsArr);\n\t\tsetVillains(newVillains);\n\t\tsetPlayer(newPlayer);\n\t\tsetPoints(newPoints);\n\n\t\tsetTimeout(() => {\n\t\t\tsetTimerToggle(!timerToggle);\n\t\t}, 500);\n\t};\n\n\tconst updatePlayerDirection = (e) => {\n\t\tif (e.which === 37) setDirection([0, -1]);\n\t\telse if (e.which === 38) setDirection([-1, 0]);\n\t\telse if (e.which === 39) setDirection([0, 1]);\n\t\telse setDirection([1, 0]);\n\t};\n\n\treturn (\n\t\t<div className=\"outer-container\">\n\t\t\t{loading || isGameEnd ? (\n\t\t\t\t<LoadingScoreManager\n\t\t\t\t\tpoints={points}\n\t\t\t\t\treset={reset}\n\t\t\t\t\tsetLoading={setLoading}\n\t\t\t\t\tsetTimerToggle={setTimerToggle}\n\t\t\t\t\ttimerToggle={timerToggle}\n\t\t\t\t\tloading={loading}\n\t\t\t\t\tisGameEnd={isGameEnd}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<PacmanGrid\n\t\t\t\t\tgrid={grid}\n\t\t\t\t\tcellSize={cellSize}\n\t\t\t\t\twidth={width}\n\t\t\t\t\theight={height}\n\t\t\t\t\tgridRef={gridRef}\n\t\t\t\t\tupdatePlayerDirection={updatePlayerDirection}\n\t\t\t\t\tdirection={direction}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n\t<StrictMode>\n\t\t<App cellSize={25} villainCount={5} />\n\t</StrictMode>,\n\trootElement\n);\n"],"sourceRoot":""}